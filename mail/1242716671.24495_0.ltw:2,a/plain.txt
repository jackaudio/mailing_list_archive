Date:        Tue, 19 May 2009 10:03:28 +0300
From:        Nedko Arnaudov  <[hidden] at arnaudov dot name>
To:          Fons Adriaensen <[hidden] at kokkinizita dot net>
Cc:          Linux Audio Developers <[hidden] at lists dot linuxaudio dot org>, JACK Developers <[hidden] at jackaudio dot org>
In-Reply-To: Fons Adriaensen Re: [LAD] [Jack-Devel] more jack/qjackctl madness : some comments (1242689398.27126_0.ltw:2,a)
Follow-Up:   Fons Adriaensen Re: [LAD] [Jack-Devel] more jack/qjackctl madness : some comments (1242718666.27730_0.ltw:2,a)

Subject:     Re: [LAD] [Jack-Devel] more jack/qjackctl madness : some comments

Fons Adriaensen <[hidden]> writes:

> On Mon, May 18, 2009 at 10:50:01PM +0100, Krzysztof Foltman wrote:
>
>> I don't see the problem, let alone OMG INTERCEPTING C API CALLS!!11! or 
>> eating babies.
>
> Well, the current implementation *does* intercept C API
> calls in order to divert them to dbus, it's not just an
> addition to the standard jackd. I never mentioned babies
> being eaten.

As long as interface is same at C API level everything is fine. dbus
cant and does not intercept any C API calls. The implementation of the
jack_client_open(), only when compiled in dbus model, only when wants to
start jack server, starts the jack server by *CALLING* libdbus
function. That C level libdbus API call is then implemented by using the
dbus IPC mechanism (sockets) and then gets into jackdbus process that
executes the call. Nobody is intercepting jack.h API C level calls.

-- 
Nedko Arnaudov <GnuPG KeyID: DE1716B0>

1242716671.24495_0.ltw:2,a <874ovha81r.fsf at usbix dot spacelabs dot org>
________________________________________________________________________________

