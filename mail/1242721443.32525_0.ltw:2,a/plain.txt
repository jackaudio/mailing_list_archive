Date:        Tue, 19 May 2009 11:23:07 +0300
From:        Nedko Arnaudov  <[hidden] at arnaudov dot name>
To:          Fons Adriaensen <[hidden] at kokkinizita dot net>
Cc:          Linux Audio Developers <[hidden] at lists dot linuxaudio dot org>, JACK Developers <[hidden] at jackaudio dot org>
In-Reply-To: Fons Adriaensen Re: [LAD] [Jack-Devel] more jack/qjackctl madness : some comments (1242718666.27730_0.ltw:2,a)
Follow-Up:   Fons Adriaensen Re: [LAD] [Jack-Devel] more jack/qjackctl madness : some comments (1242722836.2324_0.ltw:2,a)

Subject:     Re: [LAD] [Jack-Devel] more jack/qjackctl madness : some comments

Fons Adriaensen <[hidden]> writes:

> On Tue, May 19, 2009 at 10:03:28AM +0300, Nedko Arnaudov wrote:
>
>> Fons Adriaensen <[hidden]> writes:
>> 
>> > Well, the current implementation *does* intercept C API
>> > calls in order to divert them to dbus, it's not just an
>> > addition to the standard jackd. I never mentioned babies
>> > being eaten.
>> 
>> As long as interface is same at C API level everything is fine. dbus
>> cant and does not intercept any C API calls. The implementation of the
>> jack_client_open(), only when compiled in dbus model, only when wants to
>> start jack server, starts the jack server by *CALLING* libdbus
>> function. That C level libdbus API call is then implemented by using the
>> dbus IPC mechanism (sockets) and then gets into jackdbus process that
>> executes the call. Nobody is intercepting jack.h API C level calls.
>
> Nedko, you continue to contradict yourself.
>
> What you write above confirms that the jack_client_open()
> call is intercepted and its action modified. 

It is not intercepted. It is implemented. No hooking is made.
jack_client_open() action is not modified. It behaves as expected, as
documented in the API. jack server is autostarted.

-- 
Nedko Arnaudov <GnuPG KeyID: DE1716B0>

1242721443.32525_0.ltw:2,a <87vdnx8psk.fsf at usbix dot spacelabs dot org>
________________________________________________________________________________

