Date:        Mon, 22 Jun 2009 09:57:44 -0700
From:        Marco Castorina  <[hidden] at yahoo dot it>
To:          [hidden] at jackaudio dot org, [hidden] at lists dot linuxaudio dot org

Subject:     [LAD] Jack2 Issue

Hi,
 first of all thank you for your hard work on developing advanced musical tools for ubuntu.
I just installed Jack2 (1.9.2) because i wanted to test it. Everything was ok when compiling and installing, but when i try to run Jackd, i get this error:
jackd: symbol lookup error: jackd: undefined symbol: jackctl_server_create
I'm sending you log of entire process:
./waf configure --dbus --enable-pkg-config-dbus-service-dir
Linux detected 
Checking for program g++                 : ok /usr/bin/g++ 
Checking for compiler version            : ok 4.3.3 
Checking for program cpp                 : ok /usr/bin/cpp 
Checking for program ar                  : ok /usr/bin/ar 
Checking for program ranlib              : ok /usr/bin/ranlib 
Checking for g++                         : ok  
Checking for program gcc                 : ok /usr/bin/gcc 
Checking for compiler version            : ok 4.3.3 
Checking for program ar                  : ok /usr/bin/ar 
Checking for program ranlib              : ok /usr/bin/ranlib 
Checking for gcc                         : ok  
Checking for header samplerate.h         : ok 
Checking for alsa >= 1.0.0               : ok 
Checking for libfreebob >= 1.0.0         : Package "libfreebob (>= 1.0.0)" could not be found or the found version is too old. 
Checking for libffado >= 1.999.17        : Package "libffado (>= 1.999.17)" could not be found or the found version is too old. 
Checking for dbus-1 >= 1.0.0             : ok 
Checking for dbus-1 flags                : ok 
Checking for header expat.h              : ok 
Checking for header sndfile.h            : ok 
Checking for header ncurses.h            : ok 
Checking for library readline            : ok 

==================                      
JACK 1.9.2 exported from r3454M
Build with a maximum of 64 JACK clients
Build with a maximum of 1024 ports
Install prefix                           : /usr/local 
Library directory                        : /usr/local/lib/ 
Drivers directory                        : /usr/local/lib/jack 
Build doxygen documentation              : no 
Build with engine profiling              : no 
Build with ALSA support                  : yes 
Build with FireWire (FreeBob) support    : no 
Build with FireWire (FFADO) support      : no 
Build D-Bus JACK (jackdbus)              : yes 
D-Bus service install directory          : /usr/share/dbus-1/services 
Configuration finished successfully (00:00:00); project is now ready to build.

.

sudo ./waf install
[sudo] password for marco: 
* installing common/jack/systemdeps.h as /usr/local/include/jack/systemdeps.h
* installing common/jack/jslist.h as /usr/local/include/jack/jslist.h
* installing common/jack/control.h as /usr/local/include/jack/control.h
* symlink /usr/local/bin/jack_disconnect (-> jack_connect)
* installing example-clients/jack_control as /usr/local/bin/jack_control
* installing build/default/jack.pc as /usr/local/lib//pkgconfig/jack.pc
* installing build/default/dbus/org.jackaudio.service as /usr/share/dbus-1/services/org.jackaudio.service
* installing build/default/common/libjackserver.so as /usr/local/lib//libjackserver.so.0.1.0
* symlink /usr/local/lib//libjackserver.so.0 (-> libjackserver.so.0.1.0)
* symlink /usr/local/lib//libjackserver.so (-> libjackserver.so.0.1.0)
* installing build/default/common/libjack.so as /usr/local/lib//libjack.so.0.1.0
* symlink /usr/local/lib//libjack.so.0 (-> libjack.so.0.1.0)
* symlink /usr/local/lib//libjack.so (-> libjack.so.0.1.0)
* installing build/default/common/netmanager.so as /usr/local/lib/jack/netmanager.so
* installing build/default/common/profiler.so as /usr/local/lib/jack/profiler.so
* installing build/default/common/netadapter.so as /usr/local/lib/jack/netadapter.so
* installing build/default/common/audioadapter.so as /usr/local/lib/jack/audioadapter.so
* installing build/default/linux/jackd as /usr/local/bin/jackd
* installing build/default/linux/jack_dummy.so as /usr/local/lib/jack/jack_dummy.so
* installing build/default/linux/jack_alsa.so as /usr/local/lib/jack/jack_alsa.so
* installing build/default/linux/jack_net.so as /usr/local/lib/jack/jack_net.so
* installing build/default/example-clients/jack_load as /usr/local/bin/jack_load
* installing build/default/example-clients/jack_freewheel as /usr/local/bin/jack_freewheel
* installing build/default/example-clients/jack_simple_client as /usr/local/bin/jack_simple_client
* installing build/default/example-clients/jack_showtime as /usr/local/bin/jack_showtime
* installing build/default/example-clients/jack_cpu_load as /usr/local/bin/jack_cpu_load
* installing build/default/example-clients/jack_metro as /usr/local/bin/jack_metro
* installing build/default/example-clients/jack_evmon as /usr/local/bin/jack_evmon
* installing build/default/example-clients/jack_midiseq as /usr/local/bin/jack_midiseq
* installing build/default/example-clients/jack_zombie as /usr/local/bin/jack_zombie
* installing build/default/example-clients/jack_connect as /usr/local/bin/jack_connect
* installing build/default/example-clients/jack_monitor_client as /usr/local/bin/jack_monitor_client
* installing build/default/example-clients/jack_bufsize as /usr/local/bin/jack_bufsize
* installing build/default/example-clients/jack_lsp as /usr/local/bin/jack_lsp
* installing build/default/example-clients/jack_alias as /usr/local/bin/jack_alias
* installing build/default/example-clients/jack_thru as /usr/local/bin/jack_thru
* installing build/default/example-clients/jack_midisine as /usr/local/bin/jack_midisine
* installing build/default/example-clients/jack_unload as /usr/local/bin/jack_unload
* installing build/default/example-clients/jack_server_control as /usr/local/bin/jack_server_control
* installing build/default/tests/jack_test as /usr/local/bin/jack_test
* installing build/default/tests/jack_cpu as /usr/local/bin/jack_cpu
* installing build/default/tests/jack_delay as /usr/local/bin/jack_delay
* installing build/default/tests/jack_multiple_metro as /usr/local/bin/jack_multiple_metro
* installing build/default/example-clients/jack_rec as /usr/local/bin/jack_rec
* installing build/default/example-clients/inprocess.so as /usr/local/lib/jack/inprocess.so
* installing build/default/dbus/jackdbus as /usr/local/bin/jackdbus
Compilation and installation finished successfully (00:00:00)

Thank you very much guys; i'm new to development and understanding of Linux Audio and i will make my best to help the community.

Cheers,

 Marco


      

1245689891.5431_0.ltw:2,Sa <622031.75034.qm at web24604 dot mail dot ird dot yahoo dot com>
________________________________________________________________________________

