Date:        Tue, 15 Feb 2011 13:13:09 -0500
From:        Paul Davis  <[hidden] at linuxaudiosystems dot com>
To:          Jack O'Quin <[hidden] at gmail dot com>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Jack O'Quin Re: [Jack-Devel] buffer size callback, revisit (1297793231.28972_0.ltw:2,a)
Follow-Up:   Jack O'Quin Re: [Jack-Devel] buffer size callback, revisit (1297794089.30736_0.ltw:2,a)

Subject:     Re: [Jack-Devel] buffer size callback, revisit

On Tue, Feb 15, 2011 at 1:06 PM, Jack O'Quin <[hidden]> wrote:
> On Tue, Feb 15, 2011 at 11:46 AM, Paul Davis <[hidden]> wrote:

>>> Perhaps a stupid question: why not ensure the buffer size callback
>>> *is* invoked before the first process callback?
>>
>> that's part (2) of the proposal.
>
> Part (2) only mentioned making it work for the new callback from part (1).
>
> My question was: why not do that for the old-style callback as well?
>
>> the problem is that clients can't know whether a given implementation
>> will do that or not. so they cannot rely on their callback correctly
>> setting the value(s).
>
> I tried, but I just don't understand what you mean by this.

you have a client. it registers a buffer size callback. it relies on
it to get the current buffer size.

you compile it.

you (or someone) runs it.

how do you know if the callback will be made before the first process callback?

obviously you can find out if it *was* made, but that falls into the
category of "less correct" approaches that i mentioned.

1297793606.29874_0.ltw:2,a <AANLkTimXMF2GkvHpOXLOuqcq41bjCB3k4KM3iZjM-Eys at mail dot gmail dot com>
________________________________________________________________________________

