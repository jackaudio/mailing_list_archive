Date:        Tue, 15 Feb 2011 13:26:09 -0500
From:        Paul Davis  <[hidden] at linuxaudiosystems dot com>
To:          Jack O'Quin <[hidden] at gmail dot com>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Jack O'Quin Re: [Jack-Devel] buffer size callback, revisit (1297794089.30736_0.ltw:2,a)
Follow-Up:   Jack O'Quin Re: [Jack-Devel] buffer size callback, revisit (1297797796.5908_0.ltw:2,a)

Subject:     Re: [Jack-Devel] buffer size callback, revisit

On Tue, Feb 15, 2011 at 1:21 PM, Jack O'Quin <[hidden]> wrote:
> On Tue, Feb 15, 2011 at 12:13 PM, Paul Davis <[hidden]> wrote:
>
>> you have a client. it registers a buffer size callback. it relies on
>> it to get the current buffer size.
>
> Ah. I was assuming it had to initialize things, first.
>
> Clearly not an elegant interface, but that's what it requires, right?

its the initialization that leads to the race condition. you cannot
ensure that the buffer size didn't change between you determining it
and your first process() callback.

> You'd have to code it to work correctly either way. I'm still not
> quite sure why that's not possible.

you don't know if the jackd implementation you are talking to is going
to call your bufsize callback during jack_activate(). it might, it
might not. what possible strategies can you follow?

1297794381.31427_0.ltw:2,a <AANLkTim2vYdHC96OO0EQj--fGD_JT8Wz9yP=_em+=9ss at mail dot gmail dot com>
________________________________________________________________________________

