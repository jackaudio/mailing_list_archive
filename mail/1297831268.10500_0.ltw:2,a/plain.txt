Date:        Wed, 16 Feb 2011 05:40:41 +0100
From:        hermann  <[hidden] at web dot de>
To:          Jack O'Quin <[hidden] at gmail dot com>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Jack O'Quin Re: [Jack-Devel] buffer size callback, revisit (1297830719.9890_0.ltw:2,a)

Subject:     Re: [Jack-Devel] buffer size callback, revisit

Am Dienstag, den 15.02.2011, 22:31 -0600 schrieb Jack O'Quin:
> On Tue, Feb 15, 2011 at 10:22 PM, hermann <[hidden]> wrote:
> 
> > Many jack clients cant handle buffersize changes anyway, mostly because
> > the jack_set_buffer_size_callback() isn't involved.
> 
> This is true, and worth keeping in mind.
> 
> > But anyhow, clients witch handle it, and use internal buffers, have
> > allocate the buffers before they called jack_activate(), so, a change in
> > buffersize in between this time, leads anyway to a new allocation, when
> > the client notice the change, isn't it ?
> 
> Paul and Torben are concerned about what happens after allocation and
> before calling jack_activate().
> 
> > so wouldn't a call like
> >
> > if (!jack_activate(jack_client))
> >  if(sz != jack_get_buffer_size (jack_client)){buffersize change handle }
> >
> > handle the race condition without change anything in jack ?
> 
> No, I don't think so. The process thread could even run while the main
> thread is still returning from jack_activate().

Okay, and when you turn the conditions ?

1297831268.10500_0.ltw:2,a <1297831241.2052.35.camel at box>
________________________________________________________________________________

