GNU gdb (GDB) 7.0.1-debian
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /home/rgareus/src/git/tschack/jackd/.libs/jackd...done.
(gdb) run
Starting program: /home/rgareus/src/git/tschack/jackd/.libs/jackd -r -v -dalsa -dhw:2 -r48000 -p1024 -n3
[Thread debugging using libthread_db enabled]
tschack 0.120.1
Copyright 2001-2009 Paul Davis, Stephane Letz, Jack O'Quinn, Torben Hohn and others.
jackd comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it
under certain conditions; see the file COPYING for details


Memory locking is unlimited - this is dangerous. You should probably alter the line:
     @audio   -  memlock    unlimited
in your /etc/limits.conf to read:
     @audio   -  memlock    1938990
getting driver descriptor from /home/rgareus/src/git/tschack/drivers/alsa/.libs//jack_alsa.so
JACK compiled with System V SHM support.
server `default' registered
registered builtin port type 32 bit float mono audio
registered builtin port type 8 bit raw midi
clock source = system clock via clock_gettime
loading driver ..
start poll on 3 fd's
[New Thread 0xb7dbab70 (LWP 9070)]
[New Thread 0xb75b9b70 (LWP 9071)]
apparent rate = 48000
creating alsa driver ... hw:2|hw:2|1024|3|48000|0|0|nomon|swmeter|-|32bit
new client: alsa_pcm, id = 0 type 1 @ 0x8050f48 fd = -1
control device hw:2
configuring for 48000Hz, period = 1024 frames (21.3 ms), buffer = 3 periods
ALSA: final selected sample format for capture: 24bit little-endian
ALSA: use 3 periods for capture
ALSA: final selected sample format for playback: 24bit little-endian
ALSA: use 3 periods for playback
new buffer size 1024
resizing port buffer segment for type 0, one buffer = 4096 bytes
resizing port buffer segment for type 1, one buffer = 4096 bytes
new buffer size 1024
resizing port buffer segment for type 0, one buffer = 4096 bytes
resizing port buffer segment for type 1, one buffer = 4096 bytes
registered port system:capture_1, offset = 4096
registered port system:capture_2, offset = 8192
registered port system:playback_1, offset = 0
registered port system:playback_2, offset = 0
activating client alsa_pcm
++ jack_sort_graph
++ jack_rechain_graph(): chain 1
+++ client is now alsa_pcm active ? 1
port system:playback_2 activation_count=0
port system:playback_1 activation_count=0
chain swap triggered... 1
-- jack_rechain_graph()
-- jack_sort_graph
9067 waiting for signals
======= chain switch nextchain: 1 getting lock...
load = 0.1359 max usecs: 58.000, spare = 21275.000
load = 0.2086 max usecs: 60.000, spare = 21273.000
load = 0.1699 max usecs: 28.000, spare = 21305.000
################################################################# DEVICE UNPLUG


**** alsa_pcm: xrun of at least 0.036 msecs




**** alsa_pcm: xrun of at least 0.031 msecs




**** alsa_pcm: xrun of at least 0.061 msecs


ALSA: prepare error for playback on "hw:2" (Broken pipe)
DRIVER NT: could not run driver cycle
stopping driver
detaching driver
jack main caught signal 12
starting server engine shutdown
stopping driver
unloading driver
server thread back from poll
[New Thread 0xb6a97b70 (LWP 9072)]
[Thread 0xb75b9b70 (LWP 9071) exited]
freeing shared port segments
stopping server thread
last xrun delay: 31.000 usecs
max delay reported by backend: 36.000 usecs
freeing engine shared memory
max usecs: 761.000, engine deleted
cleaning up shared memory
cleaning up files
unregistering server `default'
[Thread 0xb6a97b70 (LWP 9072) exited]
[Thread 0xb7dbab70 (LWP 9070) exited]

Program exited normally.
(gdb)
