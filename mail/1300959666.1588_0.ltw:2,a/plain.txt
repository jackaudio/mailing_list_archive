Date:        Thu, 24 Mar 2011 10:40:51 +0100
From:        Stéphane Letz  <[hidden] at grame dot fr>
To:          Fons Adriaensen <[hidden] at linuxaudio dot org>
Cc:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Fons Adriaensen Re: [Jack-Devel] JackServerName parameter to jack_client_open() (1300959097.419_0.ltw:2,a)
Follow-Up:   Arnold Krille Re: [Jack-Devel] JackServerName parameter to jack_client_open() (1300961102.4612_0.ltw:2,a)

Subject:     Re: [Jack-Devel] JackServerName parameter to jack_client_open()

Le 24 mars 2011 à 10:31, Fons Adriaensen a écrit :

> On Wed, Mar 23, 2011 at 09:40:05PM -0400, Paul Davis wrote:
>> except that there's no "jack backend for jack". you'd have to make the
>> "slave servers" use some other audio API to route the server one level
>> up.
> 
> It's not so difficult to write one, did it some years ago just as an
> experiment.
> 
> This sort of thing would be a lot easier if Jack's code were structured
> a bit differently, with the engine being a shared library,

libjackserver already exist in JACK2 (I guess JACK1 also)


> exporting 
> among others a function 'run_graph()' that runs a cycle on the
> complete graph.

Not yet...

> 
> Then jackd would be a main program that takes care of e.g. command
> line parsing etc, loads the engine library, loads a backend, and
> inplements the glue to link them together

JACK2 does basically that, using the control API.

> (this includes creating
> the main audio processing thread).

??

> 
> Others application could implement their 'backend' internally,
> or, if they are themselves a jack client, call 'run_graph()'
> from their process callback.
> 
> IIRC I proposed such a thing years ago (the Jack meeting during
> the last LAC at ZKM).
> 
> Ciao,
> 

Real life use case for that would help...

Stéphane 

1300959666.1588_0.ltw:2,a <77B33154-4A6D-4D66-8488-59501833DC73 at grame dot fr>
________________________________________________________________________________

