Date:        Sun, 10 Apr 2011 14:58:20 +0300
From:        Nedko Arnaudov  <[hidden] at arnaudov dot name>
To:          Stéphane Letz <[hidden] at grame dot fr>
Cc:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Stéphane Letz Re: [Jack-Devel] JACK2 branching (1302427039.8687_0.ltw:2,a)
Follow-Up:   Nedko Arnaudov Re: [Jack-Devel] JACK2 branching (1302437336.29728_0.ltw:2,a)
Follow-Up:   Paul Davis Re: [Jack-Devel] JACK2 branching (1302461837.12234_0.ltw:2,a)

Subject:     Re: [Jack-Devel] JACK2 branching

Stéphane Letz <[hidden]> writes:

>> Do you think it it a good idea to switch to git only workflow for
>> them?
>
> It would certainly help. How difficult would it be. I we decide to do
> that, I guess I should rebase form SVN trunk before right?
>
>> Do we really have to maintain svn (non-trunk) branches when we can
>> maintain them as other git only branches?
>
> Probably not.

It was easy:

git branch libjacknet refs/remotes/libjacknet
git branch pipelining refs/remotes/pipelining
git push cz libjacknet pipelining

To get new stuff from the svn trunk, one would first update the master
branch to have latest svn trunk, then one would do a regular git merge:

git stash # ensure there are no uncommited changes
git checkout master
git svn fetch
git rebase trunk
git checkout pipelining
git merge master -m "merge svn trunk rNNNN"
git push trunk master pipelining

>>  Is there are need to define the practices used for collaboration
>> between developers in git branch? This is a pure git workflow and as
>> such there are less restrictions than when git-svn is involved. I
>> think that we should favour rebases when for commits that are not
>> yet pushed and merges for already pushed commits. Still, I've not
>> actively participated in pure GIT branch collaboration and thus it
>> makes more sense to document what the current practices are,
>> especially the good ones. If we manage to define some good GIT
>> workflow, maybe we will face less GIT mess in future. And yes, with
>> GIT we can (and did) generate lot of mess because it is powerful and
>> with few inherent restrictions.
>> 
>> Should we delete already merged branches?
>
>
> I guess yes for unused one like:
>
> devin-resolving devin-merge-20110405 newer-midi-with-winmme-driver
> (merge in newer-midi that continue its own life)
> newer-midi-with-coremidi-driver (merge in newer-midi that continue its
> own life) server-ctl-proposal (already merged) new-midi ==> replaced
> by newer-midi
>
> mob ??  js-rebase ??  jack-session ?? (Torben ??)

we should not delete "mob". it is special feature of repo.or.cz that
allows annonymous users to push commits to that branch.

> What is the git command to delete a remote branch?

git push cz :devin-resolving

(notice the ':' before the branch name)

>> Should we have a history log of branching/merging?
>
> Would help yes.

In the Changelog spirit, I created one on the wiki:

http://trac.jackaudio.org/wiki/jack2_branching_history

-- 
Nedko Arnaudov <GnuPG KeyID: 7862B9E45D1B58ED>

1302436731.28537_0.ltw:2,a <87k4f2b9nn.fsf at nuntu dot spacelabs dot org>
________________________________________________________________________________

