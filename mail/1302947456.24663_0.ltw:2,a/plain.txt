Date:        Sat, 16 Apr 2011 11:50:43 +0200
From:        Graham Goode  <[hidden] at gmail dot com>
To:          Stéphane Letz <[hidden] at grame dot fr>
Cc:          jack-devel <[hidden] at lists dot jackaudio dot org>, Erik De Schrijver <[hidden] at skynet dot be>
Follow-Up:   Devin Anderson Re: [Jack-Devel] Testing Update for Jack 1.9.8 (SVN 4300) for Windows 64 and 32 bits (1302975407.15410_0.ltw:2,a)

Subject:     Re: [Jack-Devel] Testing Update for Jack 1.9.8 (SVN 4300) for Windows 64 and 32 bits

Hi Stephane,

I installed the new 32-bit (no redistributable) and things worked fine
first time.

Then I did some Midi testing with the -X winmme command option,

By using jack_lsp -A I was able to write down a list of what the
connections showing in Jack Control were matched to in regard to my
MIDI ports. I was then able to correctly connect my three USB Midi
devices to a virtual midi port and use that port in GrandOrgue,
jOrgan, etc.

The generic names are very non-user friendly, so I'm hoping that
Qjackctl 0.3.7 does indeed show the actual device names.

I then ran into a problem when attempting to exit Jack PortAudio and
close the command prompt window. Ctrl-C usually allows Jack to exit
gracefully. When using the -X winmme option with Ctrl-C, it does not
exit but seems to be infinitely looping try to 'Discarding 0-byte
sysex chunk' in an input port. Manually closing the command prompt
ends Jack.

I then loaded everything again and tried simply exiting the command
prompt window, and that caused the computer to freeze. :(

The freeze does not happen when just using the Audio interface (i.e.
wtihout the -X winmme ).

I hope to do the MIDI latency test later today or tomorrow, and will
post the log when I do.

Kind regards,
GrahamG

On 4/15/11, Stéphane Letz <[hidden]> wrote:
>
> Le 15 avr. 2011 à 02:25, Erik De Schrijver a écrit :
>
>> Hello Stéphane,
>>
>> I have started jackd with the command jackd -R -S -X winmme -d portaudio
>> -p 512 -d "ASIO::Saffire 1394 x64"
>> Then i start Jack Control.
>> Then i start jOrgan and load a disposition (Panos' St. Clement Russell)
>> with a fluidsynth instance that is ASIO capable
>>
>> In Jack Control i see:
>>
>> - under Audio:
>>    - left pane: fluidsynth instance (javaw) and system with capture 1 to 4
>> (2 microphone and 2 line inputs)
>>    - right pane: system with playback 1 to 10 (10 audio channels)
>>
>> - under Midi:
>>    - left pane: system_midi with capture 1 to 8
>>        (6 virtual midi cables, midi input from Focusrite Saffire, M-Audio
>> USB Keystation 61es)
>>    - right pane: system_midi with playback 1 to 9
>>        (6 virtual midi cables, midi output from Fucusrite Saffire, MS GS
>> Wavetable Synth, Real Time Sequencer, Java Sound Synthesizer)
>>
>> This seems to work.
>
> OK.
>>
>> I have now to connect my keyboards to jOrgan via Jack Control.
>> After some trial and much error i could find which input must be connected
>> to which playback to have midi input to jOrgan, and have sound when
>> playing.
>>
>> Some questions:
>> - Is there a command to reveal the names of the midi devices winmme sees,
>> something similar to jackd -d portaudio -l?
>
> Yes:
>
> jack_lsp -A
>
>
>> - Is it posstble to introduce names of devices to replace capture x and
>> playback y so that it is easier to know which is which?
>
> Hum not sure, i see, maybe latest QJackCtl can do that:
>
> http://qjackctl.sourceforge.net/qjackctl-ss1.html
>
> I'll have to check.
>
>> - Are the different midi devices (capture as well as playback) always seen
>> in the same order at start of jackd, do they stay that way if plugged out
>> and later again plugged in, or is the correspondence between physical or
>> virtual devices and their respective capture and playback numbers
>> different each time jackd is started?
>
> Should be yes.
>
>>
>> What tests do you want me to do?
>
> 1) testing the MIDI out, so finding a JACK client that can play MIDI
>
> 2) test MIDI loopback latency: this a test program for that
> "jack_midi_latency_test" (to be used from a terminal)
>
> * do a loopback on the physical MIDI interface:
>
> * then use jack_midi_latency_test:
>
> jack_midi_latency_test --help
> Usage: jack_midi_latency_test [options] out-port-name in-port-name
>
>        -h, --help              print program usage
>        -m, --message-size=size set size of MIDI messages to send
>        -s, --samples=n         number of MIDI messages to send
>        -t, --timeout=seconds   wait time before giving up on message
>
> Then for instance:
>
> jack_midi_latency_test -m 3 -s 1024 -t 5 "system:ESI M8U XL MIDI 4 out"
> "system:ESI M8U XL MIDI 4 in"
>
> With adapted names to replace 'system:ESI M8U XL MIDI 4 out"  and
> "system:ESI M8U XL MIDI 4 in" (found with jack_lsp -A)
>
> Then send me the log.
>
> Stéphane

1302947456.24663_0.ltw:2,a <BANLkTinJm6t4GV+2=y4h4pFfyGcMX8-aeA at mail dot gmail dot com>
________________________________________________________________________________

