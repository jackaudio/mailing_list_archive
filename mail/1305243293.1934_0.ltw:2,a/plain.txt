Date:        Fri, 13 May 2011 02:33:10 +0300
From:        Nedko Arnaudov  <[hidden] at arnaudov dot name>
To:          Dan Muresan <[hidden] at gmail dot com>
Cc:          [hidden] at jackaudio dot org
In-Reply-To: Dan Muresan [Jack-Devel] jack and signals (1304786750.27509_0.ltw:2,a)
Follow-Up:   St√©phane Letz Re: [Jack-Devel] jack and signals (1305623638.6698_0.ltw:2,a)

Subject:     Re: [Jack-Devel] jack and signals

Dan Muresan <[hidden]> writes:

> Hi,
>
> I've just noticed that Jack does its own signal handling. Since
> applications may well expect to interact with SIGINT and even SIGPIPE,
> conflicts may arise. Is Jack's use of signals specified anywhere? What
> signals can a client handle and from what threads, what signals can it
> block, are existing handlers chained by Jack, etc?
>
> I also noticed calls to non-multi-threaded signal functions (such as
> signal(), sigprocmask ()) in the jack2 codebase -- mostly in examples,
> but also in common/JackControlAPI.cpp. POSIX specifically states that
> any use of these functions is unspecified in multi-threaded programs.
> Since their threading-safe counterparts (pthread_sigmask(),
> sigaction()) are used elsewhere in the codebase, their use could be
> easily eliminated.
>
> BTW, I'm in jack2 now. But such things should be specified for both
> jack1 and jack2.

I'd be really happy if this gets cleared up. And even happier if
jackdbus finally can catch SIGINT and SIGERM.

-- 
Nedko Arnaudov <GnuPG KeyID: 5D1B58ED>

1305243293.1934_0.ltw:2,a <878vubwl3d.fsf at arnaudov dot name>
________________________________________________________________________________

