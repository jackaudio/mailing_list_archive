Date:        Wed, 06 Jul 2011 16:03:14 +0100
From:        Peter L Jones  <[hidden] at drealm dot info>
To:          [hidden] at jackaudio dot org
In-Reply-To: Stéphane Letz Re: [Jack-Devel] JACK 1.9.8 targets / MIDI Driver status? (1309955051.16429_0.ltw:2,a)
Follow-Up:   Stéphane Letz Re: [Jack-Devel] JACK 1.9.8 targets / MIDI Driver status? (1309965257.27171_0.ltw:2,a)
Follow-Up:   Panos Ghekas [Jack-Devel] Σχετ: JACK 1.9.8 targets / MIDI Driver status? (1309974609.12131_0.ltw:2,a)

Subject:     Re: [Jack-Devel] JACK 1.9.8 targets / MIDI Driver status?

Stéphane,

Ah, so it's not the WinMME output at all, I see; it's "Multimedia Class
Scheduler Service".  See below.

On 06/07/2011 13:23, Stéphane Letz wrote:
> 
> Le 6 juil. 2011 à 10:34, Peter L Jones a écrit :
> 
>> Hey all,
>>
>> I've been running with the 20110509 release of jack2 for windows for a while
>> now and, apart from the rather noisy diagnostics when not passing "-X WinMME",
> 
> What is the problems exactly?

The message "Cannot use MMCSS 1552" scrolls up the screen constantly:
> C:\> "C:\Program Files (x86)\Jack v1.9.8\jackd.exe" -R -S -P91 -d portaudio
-d"ASIO::ASIO Echo FireWire" -r48000 -p256
> jackdmp 1.9.8
> Copyright 2001-2005 Paul Davis and others.
> Copyright 2004-2011 Grame.
> jackdmp comes with ABSOLUTELY NO WARRANTY
> This is free software, and you are welcome to redistribute it
> under certain conditions; see the file COPYING for details
> JACK server starting in realtime mode with priority 91
> Cannot lock down memory area (No error)
> Cannot use MMCSS 1552
> Cannot use MMCSS 1552
> Cannot use MMCSS 1552
> Cannot use MMCSS 1552
> Cannot use MMCSS 1552
> Cannot use MMCSS 1552
...
> jack main caught signal 2
> Cannot unlock down memory area (No error)

The usual output is:
> C:\> "C:\Program Files (x86)\Jack v1.9.8\jackd.exe" -X winmme -R -S -P91 -d portaudio -d"ASIO::ASIO Echo FireWire" -r48000 -p256
> jackdmp 1.9.8
> Copyright 2001-2005 Paul Davis and others.
> Copyright 2004-2011 Grame.
> jackdmp comes with ABSOLUTELY NO WARRANTY
> This is free software, and you are welcome to redistribute it
> under certain conditions; see the file COPYING for details
> JACK server starting in realtime mode with priority 91
> Cannot lock down memory area (No error)
> JackWinMMEDriver::Open - num_potential_inputs  3
> JackWinMMEDriver::Open - num_potential_outputs  4
> JackWinMMEDriver::Open - multimedia timer resolution set to 1 milliseconds.
> JackWinMMEDriver::Open - while creating input port: std::exception
> JackWinMMEInputPort::ProcessWinMME - MIDI device opened.
> JackWinMMEDriver::Open - while creating input port: std::exception
> JackWinMMEOutputPort::HandleMessage - MIDI device opened.
> JackWinMMEOutputPort::HandleMessage - MIDI device opened.
> JackWinMMEDriver::Open - while creating output port: std::exception
> JackWinMMEOutputPort::HandleMessage - MIDI device opened.
> JackWinMMEDriver::Open - input_count  1
> JackWinMMEDriver::Open - output_count  3
> JackWinMMEDriver::Attach - fCaptureChannels  1
> JackWinMMEDriver::Attach - fPlaybackChannels  3
> JackWinMMEDriver::Start - Starting driver.
> JackWinMMEDriver::Start - Enabling input ports.
> JackWinMMEDriver::Start - Enabling output ports.
> MMCSS API used to acquire RT for thread: -2
> MMCSS API used to acquire RT for thread: -2
> MMCSS API used to acquire RT for thread: -2
> JackWinMMEDriver::Start - Driver started.
...
(Ctrl-C)
...
> JackWinMMEOutputPort::HandleMessage - MIDI device closed.
> JackWinMMEOutputPort::HandleMessage - MIDI device closed.
> JackWinMMEOutputPort::HandleMessage - MIDI device closed.
> messagebuffer not initialized, skip message



> 
>> I've not hit any problems in general use.
> 
> Fine.
> 
>>
>> Is there anywhere tracking outstanding tasks before release I can follow?  I've
>> time on my hands right now, so if there's anything I can do, I'd like to know
>> where my efforts are best expended.
> 
> If would be interesting to know if MMCSS (http://en.wikipedia.org/wiki/Multimedia_Class_Scheduler_Service version) helps a bit for Real Time performance.
> 
> The code for thread management now activates MMCSS if priority (the -P parameter) is more that 90. 
> 
> So you could possibly try to use -P over 90 (in QjackCtl or in a terminal when launching jackd) then is the system support MMCSS "MMCSS API used to acquire RT for thread" will be printed.

See above!  WinMME vs no WinMME seems to have a big effect.  Is this expected?

> 
> It would to see if they are less XRuns with this mode especially with small buffer size.
> 
> Stéphane

1309964647.26499_0.ltw:2,a <iv1tfo$7ru$1 at dough dot gmane dot org>
________________________________________________________________________________

