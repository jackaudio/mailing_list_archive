Date:        Wed, 05 Oct 2011 21:08:47 -0400
From:        David Robillard  <[hidden] at drobilla dot net>
To:          Tobias Hoffmann <[hidden] at thax dot hardliners dot org>
Cc:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Tobias Hoffmann [Jack-Devel] Jack Midi Events (1317858937.4752_0.ltw:2,a)

Subject:     Re: [Jack-Devel] Jack Midi Events

On Thu, 2011-10-06 at 01:54 +0200, Tobias Hoffmann wrote:
> Hi,
> 
> I'm currently putting together some documentation of the netjack1 
> format, mostly for myself.
> One question I have is about the jack midi api:
> 
> According to the documentation, the jack_midi_event_t contains a raw 
> event buffer in normalized format, i.e. no running status or realtime 
> messages "inside" of other messages.
>  From that I would infer, that it is perfectly normal to store multiple 
> midi events (e.g. "note-on"s) in one jack_midi_event_t (as long as they 
> shall happen at the same sample time).
> 
> On the other hand I've seen at least one program that seems to assumes a 
> one-in-one mapping (i.e. "assert(event.size<=3);" when not handling sysex).
> 
> Can anyone clarify this for me?

Some "events" are actually series of several messages (e.g. RPN), and
one of those messages alone is useless.

I am of the opinion in general that things like this are nothing but a
PITA throwback and they should be normalized in Jack, e.g. all
controller events should have *all* the information required in them so
you know just what controllers value is being twiddled.

So, this would be a case where IMO several MIDI messages should be in
one event.

That said, formally, we don't have any actual rules about this that I
know of.

-dr

1317863351.12327_0.ltw:2,a <1317863328.3756.9.camel at Xenu dot drobilla dot net>
________________________________________________________________________________

