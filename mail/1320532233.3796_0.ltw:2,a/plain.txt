Date:        Sat, 05 Nov 2011 17:29:49 -0500
From:        Gabriel M. Beddingfield  <[hidden] at gmail dot com>
To:          [hidden] at lists dot jackaudio dot org
In-Reply-To: richard lucassen Re: [Jack-Devel] not resampling (1320530425.2387_0.ltw:2,a)
Follow-Up:   richard lucassen Re: [Jack-Devel] not resampling (1320576332.21661_0.ltw:2,a)

Subject:     Re: [Jack-Devel] not resampling

On 11/05/2011 04:59 PM, richard lucassen wrote:
> On Sat, 05 Nov 2011 21:41:58 +0000
> [hidden] wrote:
>
>> Indeed JACK does no resampling.
>> JACK "connects" to your soundcard at one samplerate, not multiple,
>> and its not variable. You start JACK at 44.1kHz, its gonna stay that
>> way till you stop jackd.
>
> I don't like resampling, especially when there is no need to. If I need
> to restart or send a signal to jackd I don't win very much using jack
> (is that right?), contrary to the use of a native 44100 mpd and a VLC
> (or any other program) that talks 48000 directly to the soundcard.

For a "music consumer" type application, then indeed: you don't win very 
much using jack.  This includes flash players, media players, and media 
servers.  Instead of JACK you might consider using PulseAudio, ALSA 
plugins (e.g. dmix), or ROAR audio.

For a "music creator" type application, JACK is pretty friggin' awesome. 
  This includes sequencers, synths, DJ, and multi-track recording 
applications..

> And this is the scenario here:
>
> - soundcard Terratec Sixfire USB
>
> - a bunch of flac files at 44100
>
> - A dreambox through S/PDIF (not implemented in the driver yet) or
> through a webstream at 48000
>
> In the end I'd prefer to use the S/PDIF instead of the http stream.

This sounds more like a consumer-type application.  It's possible to use 
JACK in this type of use-case -- but you'll find yourself pissing in the 
wind a lot (and not able to get help on it).[1]  It's your call.

-gabriel

[1] Examples:
     * If application can't follow real time rules... it gets
       disconnected and must be restarted.  This is unforgivable
       for consumer use cases.  This is a bug in the application
       in the creator use cases.
     * Client/server is pretty much a PITA in any use-case.
       For creator use cases it's tolerated.  For consumer
       use cases it results in streams of profanity.
     * The overhead of a real-time set-up is a PITA, but totally
       necc. in a creator use-case.  For the consumer use case,
       getting a real-time setup is overkill and a great way
       to lock up your system because of shoddy "consumer"
       applications.

1320532233.3796_0.ltw:2,a <4EB5B8DD.3040907 at gmail dot com>
________________________________________________________________________________

