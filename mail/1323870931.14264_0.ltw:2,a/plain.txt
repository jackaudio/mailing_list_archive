Date:        Wed, 14 Dec 2011 08:55:17 -0500
From:        Paul Davis  <[hidden] at linuxaudiosystems dot com>
To:          Stéphane Letz <[hidden] at grame dot fr>
Cc:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Stéphane Letz Re: [Jack-Devel] The Situation(s) With JACK (1323858339.27306_0.ltw:2,a)
Follow-Up:   Stéphane Letz Re: [Jack-Devel] The Situation(s) With JACK (1323871567.15462_0.ltw:2,a)
Follow-Up:   Fons Adriaensen Re: [Jack-Devel] The Situation(s) With JACK (1323898517.24055_0.ltw:2,a)
Follow-Up:   Gabriel Beddingfield Re: [Jack-Devel] The Situation(s) With JACK (1324244375.7499_0.ltw:2,a)

Subject:     Re: [Jack-Devel] The Situation(s) With JACK

On Wed, Dec 14, 2011 at 5:25 AM, Stéphane Letz <[hidden]> wrote:

>>
>> Anyway modern C++ gets my ++.
>> Watching the threads, thanks. Tim.
>>
>
> And one way to improve the situation is to make a clear choice or the reference code base.

i don't think that *anyone* believes that the C code base of JACK1 is
an appropriate thing to keep developing. certainly I do not. even
though its actually easier to add a new callback to JACK1 than to
JACK2, its completely obvious that the JACK1 codebase is dead as a
future/longterm development path.

the question is not "do we we keep working on the JACK1 C code base or
the JACK2 C++ code base?"

the questions is: (given that) we (active JACK developers all)
want/need a C++ implementation. is the JACK2 codebase the right
starting point for that, or do we gain something by doing a new
implementation that draws from JACK2 but leverages boost (among other
things) and uses fully idiomatic C++ unless doing so compromises
performance notably.

1323870931.14264_0.ltw:2,a <CAFa_cKnZvOhyots_iAA_Nm+exdQqSxQ98+hHOR0KiKWZkEbLUg at mail dot gmail dot com>
________________________________________________________________________________

