Date:        Mon, 19 Dec 2011 19:56:02 +0200
From:        Nedko Arnaudov  <[hidden] at arnaudov dot name>
To:          [hidden] at lists dot ladish dot org
Cc:          [hidden] at lists dot jackaudio dot org, [hidden] at lists dot linuxaudio dot org

Subject:     [Jack-Devel] [ANN] LADI Session Handler - Version 1

This release marks end of the preview series. It brings three new user
visible features - virtual graph manipulation, LASH support and
jack-session support.

Virtual graph manipulation allows to perform these operations:
 * Split (create new client and move capture ports to the the new
   client)
 * Join (move ports of one clients to another client and remove the
   first client)
 * New client
 * Move port
 * Rename client
 * Rename port
 * Remove (empty) client

The added LASH and jack-session support allows apps to be run in rooms
at LASH or jack-session level. jack-session support requires
jack-1.9.8.

= Download =
The tarballs are available at the usual location:

 * http://ladish.org/download/
 * http://ladish.org/download/ladish-1-with-deps.tar.bz2
 * http://ladish.org/download/ladish-1-with-deps.tar.bz2.sig
 * http://ladish.org/download/ladish-1.tar.bz2
 * http://ladish.org/download/ladish-1.tar.bz2.sig

There are two tarballs. ladish-1-with-deps.tar.bz2 is 5.3 MiB and
bundles the major dependencies that are usually needed for running
ladish:
 * flowcanvas
 * LADI Tools
 * a2jmidid
 * jack2

All of these are either development (git/svn) versions or release
versions that are patched to work better with ladish. The last released
versions of these dependencies are expected work with ladish. The most
serious "incompatibility" is that the jack2 mainline is missing the
no-self-connect changeset. This changeset adds option to jack that
allows prevention of jack apps self connection to "hardware" ports
(usually system:playback_N). As such self-connecting apps are not rare
at all, without it, the studio/room separation is not-effective and
the workflow can get very confusing.

If you are compiling the software by yourself, then you should
probably use this "fat" tarball.

The ladish-1.tar.bz2 tarball is 586 KiB and contains only ladish
itself. It is expected to be used mainly by packagers.

= Known issues =
If you want to use yoshimi-0.060.10, beware that its jack-session
implementation is broken. As a workaround, in gladish settings dialog,
"JS delay" can be set to few seconds instead of the default 0. Two
seconds should work in most cases. For more info, check
http://ladish.org/ticket/187

= More info on the ladish project =

Homepage: http://ladish.org/

LADI Session Handler or simply ladish is a session management system
for JACK applications on GNU/Linux. Its aim is to allow you to have
many different audio programs running at once, to save their setup,
close them down and then easily reload the setup at some other
time. ladish doesn't deal with any kind of audio or MIDI data itself;
it just runs programs, deals with saving/loading (arbitrary) data and
connects JACK ports together. It can also be used to move entire
sessions between computers, or post sessions on the Internet for
download. Check the project goals for more info. 

Project goals:
 * Save and restore sets of JACK (audio and MIDI) enabled
   applications.
 * Provide JACK clients with virtual hardware ports, so projects can
   be transferred (or backups restored) between computers running
   different hardware and backups. 
 * Don't require session handling library to be used. There is no need
   of such library for restoring connections between JACK clients.
 * Flow canvas based GUI. Positions of elements on the canvas are
   saved/restored.
 * Allow clients to use external storage to save its state. This
   includes storing internal state to non-filesystem place like memory
   of a hardware synth. This also includes storing client internal
   state (client project data) in a way that is not directly bound to
   ladish project. 
 * Import/export operations, as opposed to save/load. Save/load
   operate in current system and may cause saving data outside of
   project itself (external storage). Import/export uses/produces
   "tarball" suitable for transferring session data over network to
   other computer or storing it in a backup archive.
 * Hierarchical or tag-based organization of projects.
 * List of JACK applications. Applications are always started through
   ladish to have restored runtime environment closer to one existed
   before project save.
 * Distributed studio - network connected computers. Netjack
   configuration is part of the studio and thus is saved/restored.
 * Collaborate with the X11 window manager so window properties like
   window position, virtual desktop and screen (multimonitor) are
   saved/restored.

-- 
Nedko Arnaudov <GnuPG KeyID: 5D1B58ED>

1324317407.1861_0.ltw:2,a <87bor44f9p.fsf at arnaudov dot name>
________________________________________________________________________________

