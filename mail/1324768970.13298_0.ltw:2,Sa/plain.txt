Date:        Sun, 25 Dec 2011 01:22:13 +0200
From:        Nedko Arnaudov  <[hidden] at arnaudov dot name>
To:          Robin Gareus <[hidden] at gareus dot org>
Cc:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Robin Gareus [Jack-Devel] ladish + jack autoconnect -- was Re: alsa_in problems (1324764019.8407_0.ltw:2,Sa)
Follow-Up:   Nedko Arnaudov Re: [Jack-Devel] ladish + jack autoconnect (1324770754.14646_0.ltw:2,Sa)
Follow-Up:   Robin Gareus Re: [Jack-Devel] ladish + jack autoconnect (1324770915.14725_0.ltw:2,a)
Follow-Up:   Robin Gareus Re: [Jack-Devel] ladish + jack autoconnect (1325346703.3487_0.ltw:2,a)

Subject:     Re: [Jack-Devel] ladish + jack autoconnect

Robin Gareus <[hidden]> writes:

> Am I correct in saying that, Arch by default come with additional tools
> (jack-ladish) that do auto-connect or self-connect by default and those
> tools require a patch to disable it again?
>
> If so, i'd like to learn about the motivation for the "auto-connect or
> self-connect" feature.

the patch adds option to jack that when enabled prevents apps from self
connecting. it does not prevent control apps like qjackctl to connect
other apps. ladish does not autoconnect anything except when restoring
"sessions" (in ladish terms its studio or project).

The patch is not upstream because of the veto callback proposal that is
still not implemented (because nobody obviously cares). This is
irrational from my POV but at least there is a complete statement about
the rejection.

Now that I think of it, I dont recall proposing to implement this option
for jack1. So here I do it:

I'd like to implement new jack1 server option (exposed in jackd too) with
value that defaults to current behaviour. The option (kind of enum) has
four other possible values. In total:

 * dont restrict self connect attempts (default)
 * ignore (dont fail, nop) all self-connect requests
 * fail all self-connect requests
 * ignore self connect requests to other clients only
 * fail self connect requests to other clients only

If something in my proposal is not clear, please let me know. I'll try
to clarify it.
 
> On that note: is ladish/laditools compatible with qjactctl these days?

> The OP mentioned that he starts jackd via qjackctl and and last time I
> checked, that was incompatible with ladish. Is that still true? Can they
> co-exist or inter-operate?

No two sesion handlers/managers (pyjacksm/qjackctl/lash/ladish) are
known to interoperate. Do you see point of doing go so? If so, how? Or
maybe you used "compatible" in some other meaning?

A user tutorial [1] I saw few days ago suggests that it is possible to
start qjackctl from gladish, for configuring jackdbus. Usually ladiconf
is used instead but ladish-1 allows custom jackdbus configuration tool
to be used.

[1] http://linuxhomerecording.blogspot.com/2011/12/ladi-session-handler.html

-- 
Nedko Arnaudov <GnuPG KeyID: 5D1B58ED>

1324768970.13298_0.ltw:2,Sa <87ty4p368q.fsf_-_ at arnaudov dot name>
________________________________________________________________________________

