Date:        Wed, 16 Oct 2013 09:16:07 +0200
From:        Stéphane Letz  <[hidden] at grame dot fr>
To:          Devin Anderson <[hidden] at gmail dot com>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Devin Anderson Re: [Jack-Devel] major change in jack1 MIDI handling (1381596279.2709_0.ltw:2,)
Follow-Up:   Devin Anderson Re: [Jack-Devel] major change in jack1 MIDI handling (1381911964.17373_0.ltw:2,)

Subject:     Re: [Jack-Devel] major change in jack1 MIDI handling

Le 12 oct. 2013 à 18:44, Devin Anderson <[hidden]> a écrit :

> On Sat, Oct 12, 2013 at 4:37 AM, Paul Davis <[hidden]> wrote:
> 
>> Jack2 has its own development "group"
>> who are happy with its code structure and who have done some great stuff
>> (Devin's work on MIDI drivers is really fantastic).
> 
> First off, I appreciate the compliment.  A lot. :)  Thanks.
> 
> I wouldn't say that I am "happy with [JACK 2's] code structure".  I
> strongly dislike the architecture and design patterns used in JACK 2.
> I find the coding style confusing and frustrating (CamelCase function
> names are gross).  The overuse of inheritance and underuse of
> component architecture makes it very difficult to track down function
> definitions.  There are virtual functions that are pointlessly defined
> (never used).  I could go on, but I think you get the point.
> 
> The reason I chose to add code to JACK 2 is because C++ afforded me
> the path of least resistance.

Which is by itself quite a real argument ((-; 

At that time, my feeling was that your C++ MIDI backend architecture was quite elegant and could be inserted quite easily in the global backend model.

> 
> I prefer the architecture and code structure of JACK 1.

You preferred JACK1 code structure, but you coded in C++. So why in the first place?

Anyway this discussion is again coming to an end: the result of all this years is that people generally criticize, but *never* provide any real significant re-structure/improvement ideas, new code design etc 

JACK2 fits our internal needs, we can easily experiment new things, like some recent small improvement in NetJack2 partetc We maintain the OSX/Windows (for Mixbus needs especially) the best we can. The work with Christian on iOS port was quite interesting, even if IOS7 seems to sign the end, since Apple closed all IPC code for external developers...

Then why would GRAME invest more time in all that stuff? 

Stéphane

1381907774.10985_0.ltw:2, <FA3F6A55-465A-4ACB-ABD4-9397222C1190 at grame dot fr>
________________________________________________________________________________

