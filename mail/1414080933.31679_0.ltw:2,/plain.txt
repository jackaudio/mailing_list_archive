Date:        Thu, 23 Oct 2014 16:52:19 +0200
From:        Robin Gareus  <[hidden] at gareus dot org>
To:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Hans Petter Selasky [Jack-Devel] System signals and JACK (1414051735.10353_0.ltw:2,)
Follow-Up:   Hans Petter Selasky Re: [Jack-Devel] System signals and JACK (1414438966.17922_0.ltw:2,)

Subject:     Re: [Jack-Devel] System signals and JACK

On 10/23/2014 09:46 AM, Hans Petter Selasky wrote:
> Hi,
> 
> Some applications are using signals() and the jack client needs to
> ignore these. Consequently read/write calls should be wrapped. See
> attached patch. Can this be put upstream? Probably same issue with jack2.
> 

JACK is a *realtime* audio system, if application code changes the
behavior so that jack read/writes to be interrupted by a EINTR, it
really seems something is broken by design there.

signal() is sent to the main process thread. It should not be able to
affect the jack-process callback thread at all. (Marking the jack thread
as TASK_UNINTERRUPTIBLE could be a way forward or explicitly using
pthread_sigmask() - but those are hacks and workarounds).

Either way I cannot reproduce the problem in the first place, jltcgen
from https://github.com/x42/ltc-tools uses SIGHUP to re-sync and that
never caused issues here with jack2 on various architectures.

2c,
robin

1414080933.31679_0.ltw:2, <54491623.70506 at gareus dot org>
________________________________________________________________________________

