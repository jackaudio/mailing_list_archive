Date:        Sat, 11 Apr 2015 08:54:52 -0400
From:        Paul Davis  <[hidden] at linuxaudiosystems dot com>
To:          Johannes Lorenz <[hidden] at mailueberfall dot de>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Johannes Lorenz Re: [Jack-Devel] Avoiding spinlocks in a parallel sequencer (1428747975.13507_0.ltw:2,)

Subject:     Re: [Jack-Devel] Avoiding spinlocks in a parallel sequencer

JACK already supports MIDI data. Presumably if you are using notes, you
would use that.

But again, I wasn't proposing "one jack client per effect" ... I was
proposing only a single JACK client per application, and NOT using JACK's
audio graph capabilities within your application: you would need to compute
execution order yourself or use a nice library for this (not that there
necessarily are any nice libraries).

On Sat, Apr 11, 2015 at 6:26 AM, Johannes Lorenz <
[hidden]> wrote:

> Am Donnerstag, 9. April 2015, 09:00:38 schrieben Sie:
> > Speaking entirely personally, I think this design is just plain nuts. I
> > know there are some JACK-ecosystem developers who disagree with me, but I
> > think that using JACK clients for this purpose is just wrong and is
> pushing
> > the design scope for JACK.
>
> Ok, let's say I'll do what multiple people proposed here: one jack client
> per effect + only data exchange between effects via jack ports.
>
> Then see this example:
>
>     piano roll   ----- (notes) -----> synthesizer
>
> How should one transfer notes using a jack buffer? Of course, one could
> make a structure to transfer notes, cast this structure to const char*, and
> *hope* it fits into the port buffer. Is there any better way? Maybe a
> "custom port type"?
> 
> Jack-Devel mailing list
> [hidden]
> http://lists.jackaudio.org/listinfo.cgi/jack-devel-jackaudio.org
>

1428756900.18753_0.ltw:2, <CAFa_cKncDKOJenkWfHCHA892LK_AiFWcWC8cn160Af4SvHh1zw at mail dot gmail dot com>
________________________________________________________________________________

