Date:        Sat, 11 Apr 2015 10:49:08 -0400
From:        Paul Davis  <[hidden] at linuxaudiosystems dot com>
To:          Johannes Lorenz <[hidden] at mailueberfall dot de>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Johannes Lorenz Re: [Jack-Devel] Avoiding spinlocks in a parallel sequencer (1428763418.22460_0.ltw:2,)

Subject:     Re: [Jack-Devel] Avoiding spinlocks in a parallel sequencer

On Sat, Apr 11, 2015 at 10:43 AM, Johannes Lorenz <
[hidden]> wrote:

> > But again, I wasn't proposing "one jack client per effect" ... I was
> > proposing only a single JACK client per application, and NOT using JACK's
> > audio graph capabilities within your application: you would need to
> compute
> > execution order yourself or use a nice library for this (not that there
> > necessarily are any nice libraries).
>
> Need to ask once more. Assuming I'll do this - one jack client and
> zynaddsubfx as a plugin. Nonetheless, if I have 40 instances of zyn, I'd
> like to (actually must) compute them concurrently. So how to do this with
> one client?
>

By using your own internal graph mechanism that has parallel capabilities.
See, for excample, https://github.com/flowprogramming/dspatch


>
> The best way I can see is using an array of jack clients, and hoping
> they'll process() at the same time. However, this sounds very tricky...
>

There can be very good reasons for using JACK 1. If a user is doing that,
you won't get any parallelization at all.

1428763756.22597_0.ltw:2, <CAFa_cKm=hqq_c14vtPgA7EuhT58jx+xGNX2JJRoPnTGU6J8POg at mail dot gmail dot com>
________________________________________________________________________________

