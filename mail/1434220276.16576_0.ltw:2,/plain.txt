Date:        Sat, 13 Jun 2015 20:31:10 +0200
From:        Kjetil Matheussen  <[hidden] at gmail dot com>
To:          Robin Gareus <[hidden] at gareus dot org>
Cc:          "[hidden] at lists dot jackaudio dot org" <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Robin Gareus Re: [Jack-Devel] 64 bit jack applications compiled with mingw crashes (1434219384.16075_0.ltw:2,)
Follow-Up:   Kjetil Matheussen Re: [Jack-Devel] 64 bit jack applications compiled with mingw crashes (1434221592.17399_0.ltw:2,)

Subject:     Re: [Jack-Devel] 64 bit jack applications compiled with mingw crashes

On Sat, Jun 13, 2015 at 8:16 PM, Robin Gareus <[hidden]> wrote:

> On 06/13/2015 01:25 PM, Kjetil Matheussen wrote:
> > Hi,
> >
> > I'm trying to compile a 64 bit jack application (radium) with mingw-64.
> [...snip...]
>
> The ABI of libjack on windows is not stable. Not only do the ordinals
> differ with version but also depending on architecture.
>
> MSVC has a workaround for this: link by function-name, not ordinal.
> mingw does not offer this.
>
> The solution adopted by Carla, Ardour and Mixbus is to simply dlopen()
> uhm LoadLibraryA(), libjack at runtime, rather that link the application
> against jack.
>
> An easy way of doing so is provided at https://github.com/x42/weakjack/
>
>
Thank you very much! I've noticed earlier that the ABI is not stable, so
I'll
start using weakjack now.

But in this case, both the compiler environment, and the virtual machine
running windows, uses the exact same version of Jack, so this problem
is probably not an ABI incompatibility issue.

1434220276.16576_0.ltw:2, <CAC6niEK4WQxTw=a+hYxE_fOXSPkEqanw9CoC0-m5w-szzoM6CQ at mail dot gmail dot com>
________________________________________________________________________________

