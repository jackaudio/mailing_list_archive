Date:        Sat, 30 Jan 2016 10:17:52 -0800
From:        Michael  <[hidden] at gmail dot com>
To:          Paul Davis <[hidden] at linuxaudiosystems dot com>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Paul Davis Re: [Jack-Devel] stepping down (1454177103.27020_0.ltw:2,)
Follow-Up:   Paul Davis Re: [Jack-Devel] stepping down (1454180313.29088_0.ltw:2,)

Subject:     Re: [Jack-Devel] stepping down

On 2016-01-30, at 10:04 AM, Paul Davis <[hidden]> wrote:

> 
> 
> On Sat, Jan 30, 2016 at 11:50 AM, Benjamin Schmaus <[hidden]> wrote:
> + jack-devel
> 
> pls see question for Paul below.
> 
> On Sat, Jan 30, 2016 at 8:48 AM Benjamin Schmaus <[hidden]> wrote:
>  as the years have gone on, although I am still delighted by the technical quality and 
>    the conception of JACK, I no longer think that it is a particularly good idea for most users. There
>    are times when it is useful
> 
> Could you elaborate on this?  Curious to know more.
> 
> 
> JACK was developed in part because of the absence of a viable plugin API on Linux. It allowed people to "glue together" whole applications rather than load plugins into a host. This is pretty cool, no question. But the session management aspects of it are not that cool, and despite both the JACK session API and the Non session manager and other things that falktx (Filipe) have done, the situation for users really hasn't ever gotten to the point where reloading a "JACK session" comprised of many individual applications is as easy as it ought to be.
> 
> By contrast, we now have a fairly excellent plugin API (LV2) that is supported by several hosts, a number of which offer up quite different models of plugin loading, control, management and usage (Contrast, for example, Ardour, Carla, Qtractor, Non-foo and jalv). I think that most users are better served by developers creating LV2 plugins and the users loading them into one or more hosts of their choice (the so-called "monolithic environment" approach). This allows save+reload to be simple, fast, and reliable.
> 
> There will continue to be times when using JACK to glue together applications is still a really useful thing, and I hope that JACK will continue to be there to support those times. But I don't think JACK is generally the right solution for most users, most of the time. The one big positive it still offers: multiple applications can access the audio device at the same time, with low latency and synchronous behaviour. This is an important feature not offered by ALSA or PulseAudio, and for that reason alone, JACK remains important. It also the case that JACK is the only cross-platform system for doing inter-application audio.
> 
> Jack-Devel mailing list
> [hidden]
> http://lists.jackaudio.org/listinfo.cgi/jack-devel-jackaudio.org

As a user, let me give you an entirely different viewpoint. I love Jack, and see no alternative, for this:

I can have different applications send audio output to different devices.

Almost all applications want to send audio to the default audio device. (Which makes sense, right?). So, with Jack, and no programs being jack-aware other than QJackCtl, I can tell all these different programs which device to use.

If you can name any alternative to this, please do. I am on a Mac.

Are there problems? Sure. Apple's stupidity of saying "Lets retrofit a security manager on something that was not designed for security", along with no way for users to adjust things, and "This is good enough for Apple's stuff, no user needs more than we say they can have", means that a lot of things can't make use of any audio when Jack is active. (Technically: The sandbox system, designed to put an additional layer of security beyond just file access rights or same user-ID, while having the goal of preventing a malicious program from doing something just because it has your user permissions, is adding a layer to a system that was not designed for it. So, you can, and do, get into situations where a program is denied the ability to talk to other programs by a public API because it's a network socket (seriously, a local-domain file system socket is denied by default), with no way for any user input/output tool (think human interface device for deaf, or disabled) to be registe
 red by the users as privileged. If you think I'm being crazy, look up "Dasher", consider how useful it would be for typing on a touch-screen tablet, and then realize that iOS basically blocks any input "device" like that, and the desktop is being locked down more and more.)

Sorry, end rant.


---
Entertaining minecraft videos
http://YouTube.com/keybounce

1454177882.27616_0.ltw:2, <D64CA015-0630-4CAE-AC89-97583F1C1154 at gmail dot com>
________________________________________________________________________________

