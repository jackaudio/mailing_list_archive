Date:        Mon, 01 Feb 2016 10:46:27 +0100
From:        Stéphane Letz  <[hidden] at grame dot fr>
To:          [hidden] at notam02 dot no
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Kjetil Matheussen Re: [Jack-Devel] libjack vs server [ was Re: stepping down (1454318776.21808_0.ltw:2,)
Follow-Up:   Kjetil Matheussen Re: [Jack-Devel] libjack vs server [ was Re: stepping down (1454321847.24836_0.ltw:2,)

Subject:     Re: [Jack-Devel] libjack vs server [ was Re: stepping down

> 
> A server solves this problem by keeping jack as a seperate process that is
> not dependant on any other process to keep it alive.
> 
> Can you expand on how you would solve this with library instead of a server?
> 
>  
> Yes, that's an interesting programming challenge. It's probably very hard
> to make this work decently, but the thing is that if you want to run several
> clients at the same time, you will still have the option of starting a "main client"
> first, same way as you run jackd now. What I was replying to in this thread,
> was if you want run a DAW, you very often only want to run one client, and
> then you don't need to start jackd and qjackctl.
> 


Before this discussion becomes too crazy (like :  "let's redesign JACK yet again but without anyone to ever implement this new/better/fabulous new stuff.)  Kjetil I  would suggest you read this old paper (2009) on JACK2 design, that answers some of your questions : 

http://lac.linuxaudio.org/2009/cdm/Thursday/01_Letz/01.pdf

Then I guess the discussion could move on what can be done on a more general level : how to keep JACK1 code base alive ? should we redirect the few developer resource to at least maintain JACK2 code base on Linux, OSX, Windows?  This kind of questions.

Stéphane

1454319997.22667_0.ltw:2, <A2EA9B68-3238-4048-8948-EF049C1DE611 at grame dot fr>
________________________________________________________________________________

