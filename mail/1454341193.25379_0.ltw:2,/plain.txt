Date:        Mon, 01 Feb 2016 23:39:43 +0800
From:        sqweek  <[hidden] at gmail dot com>
To:          [hidden] at notam02 dot no
Cc:          "[hidden] at lists dot jackaudio dot org" <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Kjetil Matheussen Re: [Jack-Devel] Client-Server models are just fine. Please? (1454337088.18560_0.ltw:2,)
Follow-Up:   Kjetil Matheussen Re: [Jack-Devel] Client-Server models are just fine. Please? (1454342033.26761_0.ltw:2,)

Subject:     Re: [Jack-Devel] Client-Server models are just fine. Please?

On 1 February 2016 at 22:31, Kjetil Matheussen <[hidden]> wrote:

>>> to fail. For instance didn't the messages window in the windows version
>>> of qjackctl show anything
>>> coming from jackd until autumn 2015.
>>
>> that has to do with windows and qjackctl, not with jackd.
>
> But it illustrates how flaky the system is when a bug like this can exist
> for 10 years.

No, a 10 year old bug illustrates nothing but the nature of open
source. For a bug to be fixed it must (a) be encountered (b) be
reported and (c) receive developer attention. (a) & (b) is extremely
hard for qjackctl on win32 because the majority of the userbase is on
a different platform. Hats off to yourself for stepping up to fill (c)
and giving win32 some much needed attention, but this doesn't make
jackd "flaky".

Your proposal doesn't make sense in general. It's narrow minded and
very focused on the GUI application use-case. Most of the JACK clients
I run have no GUI at all. If they are the first client to run and you
still want to configure JACK's options via a GUI, you *need* to spawn
a separate process.

Anyway, a separate process makes the whole system *more* robust, not
more flaky. If the jack server is running in the same address space as
a client, then an error in that client (segfault/buffer overflow/etc)
can bring down the entire audio system.

It sounds like the existing configuration mechanism provided by jackd
enables you to do what you want already (ie. running ~/.jackdrc). You
can do literally whatever you want in this script. You don't have to
run jackd directly, you can write a GUI frontend that lets you
configure options before launching jackd and make ~/.jackdrc launch
*that*.

The best part about this is that it just works with no change to
jackd, no change to libjack, and no change to any clients. This is
UNIX philosophy. We have simple tools and we glue them together. And
the result is beautiful.



Well, sometimes :)

While I'm here let me throw in a thanks for jack. It's a beacon of
simplicity in the mess that is linux audio. If it wasn't for bluetooth
I would still be using it exclusively rather than being stuck with
pulseaudio :)

-sqweek

1454341193.25379_0.ltw:2, <CAM104AWG83u9w2mSvSFhSqSABScL5XsV+MpGH5rTrNCjth8OPw at mail dot gmail dot com>
________________________________________________________________________________

