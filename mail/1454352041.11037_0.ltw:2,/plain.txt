Date:        Mon, 01 Feb 2016 19:40:27 +0100
From:        micu  <[hidden] at gmx dot de>
To:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Paul Davis Re: [Jack-Devel] stepping down (1454177103.27020_0.ltw:2,)

Subject:     [Jack-Devel] Thank you! | The history of (JACK) session management

Hi Paul,
hi others,

Having been somewhat absent for a long time, I still passively always 
watched the progress the FOSS audio world made. It is my plan to be more 
active in the Linux pro audio world (when it comes to development) in 
the future.

But that is another story. At this point, I'd rather simply like to say 
"Thank you!" to you, Paul, for starting the JACK and Ardour universe. 
Thanks for all your enduring dedication.

But also thanks to St√©phane, to falkTX, to Rui,... to all of you, who 
put so much effort into the wonderful world of Linux Audio!


Paul Davis <[hidden]> [30.01.2016 13:04]:
<[hidden]>
> JACK was developed in part because of the absence of a viable plugin
> API on Linux. It allowed people to "glue together" whole applications
> rather than load plugins into a host. This is pretty cool, no
> question. But the session management aspects of it are not that cool,

Your analysis of the current situation is really interesting for me.

Actually, I was thinking a lot about the topic of session management the 
last days, and I'd like to ask some questions about it:

Curiously, I had a hard time to find out something about the history of 
session management on the internet. For example: What where the reasons 
that, once LASH silently vanished, LASH was followed by (at least --- 
not counting "non" here) successors: JACK session and LADISH?
Is there a fundamental difference between the two?


But that is not my main question.

It comes here:

Suppose,


    A) a JACK session manager used chunks instead of the "save your 
       state %here" approach,
       (
         My guess this approached was chosen instead of chunks:       
         1) It requires less changes for a client to implement session   
         management support

         2) Cross-process chunks might have been considered a challange
       )

    B) This sesssion management is integrated into a DAW,
       et's say e.g. Ardour.

Hence, I could start some JACK clients, set up my connections, do some 
config in my clients, hit save in Ardour, and save the whole stuff to 
*one* file. When I reload it, everything is there as I left it.

Even if one of the clients was, let's say LMMS or Qtractor, it would be 
still up to the user to decide whether they want to use Ardour, Qtractor 
or LMMS as a JACK session client or as the session master. So this 
wouldn't mean a privilege for any DAW setlled by the developers. 

---> Would you consider the JACK approach then to be more valuable for 
     the end user?

---> Do you think this is something to strive for?


Your opinions on these thoughts are highly appreciated :).


Kind regards,
micu

-- 
OpenPGP / GnuPG:	0xE4CB4E80
Fingerprint:		1A15 A480 1F8B 07F6 9D12 3426 CEFE 7455 E4CB 4E80

<<</>>

http://www.micuintus.de

1454352041.11037_0.ltw:2, <12872975.6NnuK0R5rn at denkbrett>
________________________________________________________________________________

