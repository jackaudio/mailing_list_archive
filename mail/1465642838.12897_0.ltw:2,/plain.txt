Date:        Sat, 11 Jun 2016 07:00:09 -0400
From:        Paul Davis  <[hidden] at linuxaudiosystems dot com>
To:          "[hidden] at saepia dot net" <[hidden] at saepia dot net>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: [hidden] at saepia dot net Re: [Jack-Devel] shm registry full errors (1465633128.3869_0.ltw:2,a)

Subject:     Re: [Jack-Devel] shm registry full errors

Ah, well for just port counts, Jack2 hard-codes the limit at compile time.
Jack1 allows any size to be set at run time.

However, you've run into the shm registry issue, and both Jack2 and Jack1
encode that at compile time.

There are no explicit limits on the number of clients themselves in either
implementation.

On Sat, Jun 11, 2016 at 4:18 AM, [hidden] <[hidden]>
wrote:

> Exactly.
>
> I am not asking when drops will start to occur.
>
> I am asking about technical capability to connect clients even if they do
> nothing regarding DSP.
>
> I run into issues on jack_client_open phase, not later.
>
> If I will have issues later on with drops due to exceeding DSP load, then
> I will try to figure out how to optimize that part, but for now I just need
> to predict if JACK will handle properly just connecting many clients.
>
> M.
> 11.06.2016 9:54 AM "Kjetil Matheussen" <[hidden]>
> napisał(a):
>
>>
>>
>> On Fri, Jun 10, 2016 at 5:18 PM, Paul Davis <[hidden]>
>>
>>>
>>> But still, I need to know what is the limit, and it seem to be quite
>>>> unknown… I can obviously do crash testing, but I would prefer to rely on
>>>> certain design principles, no luck that I won’t encounter some hardcoded
>>>> limits...
>>>>
>>>
>>> well, as mentioned, you can't put things on the command line that have
>>> be constant across the server and library. so there are some constants that
>>> are going to be hard-coded whether you like it or not.
>>>
>>> there is no "hard limit". the number of clients before there is so
>>> little time left for the process cycle() depends on (a) what each client
>>> does (b) how much time each client takes for its context switch (which is
>>> partially a function of what it does) (c) the period size
>>>
>>>
>> I understood his question to be how many ports you can add before running
>> out of shared memory,
>> not how many clients you can run before running out of cpu...
>>
>>
>>

1465642838.12897_0.ltw:2, <CAFa_cK=ngvmMj1QTodU1U3eqyTuiT2A=EL7DoKbrOuRA9wP5yQ at mail dot gmail dot com>
________________________________________________________________________________

