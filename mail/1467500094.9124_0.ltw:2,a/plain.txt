Date:        Sat, 02 Jul 2016 15:54:22 -0700
From:        Evan Laforge  <[hidden] at gmail dot com>
To:          Thomas Brand <[hidden] at trellis dot ch>
Cc:          JACK <[hidden] at lists dot jackaudio dot org>
In-Reply-To: Thomas Brand Re: [Jack-Devel] graph simplification using mathematics? (1467498337.7172_0.ltw:2,a)
Follow-Up:   Paul Davis Re: [Jack-Devel] graph simplification using mathematics? (1467506881.15655_0.ltw:2,)

Subject:     Re: [Jack-Devel] graph simplification using mathematics?

Also this is interesting: http://halide-lang.org/  It's for images,
but just take away a dimension and it looks like audio.

Audio processing can be very data parallel so I'm surprised I haven't
seen any work related to audio on a GPU.  Maybe it's not so suitable
after all.

On Sat, Jul 2, 2016 at 3:24 PM, Thomas Brand <[hidden]> wrote:
> On Sat, July 2, 2016 23:14, StÃ©phane Letz wrote:
>> Faust :  http://faust.grame.fr
>>
>
> Faust was the first thing that came to mind indeed! The introduction
> paragraphs in the documentation says
>
> -specification language
> -describe signal processors from a mathematical point of view
> -free from implementation details
>
> But right after that:
> -FAUST programs are fully compiled, not interpreted.
>
> I can imagine to bundle FAUST code from different processors
> semi-automatically or handcrafted to one unit relatively easily. However i
> was thinking in a direction where the units live in a host still as single
> units, to be connected in different ways, and the host would dynamically
> derive a single math operation of the current graph. I understand this
> would include recompilation or some kind of JIT compilation in order to
> work. If possible at all, i think Faust would currently be the best fit,
> since it already offers some of the fundamental concepts needed to even
> think about doing something like this. That would allow large graphs with
> almost no context switches (this is pure speculation).
>
> Greetings
> Tom
>
> PS: jack-devel list added to reply
>
>>
>>> Le 2 juil. 2016 Ã  22:58, Thomas Brand <[hidden]> a Ã©crit :
>>>
>>> Hi,
>>> i wondered if the following scenario could work. Assuming DSP is
>>> basically maths, and the formula and variables for every plugin would be
>>> known, would it then be possible to magically simplify all formulas of
>>> all plugins to one single formula doing all in one step? Does this sound
>>> weird? Greetings
>>> Tom
>>>
>
> 
> Jack-Devel mailing list
> [hidden]
> http://lists.jackaudio.org/listinfo.cgi/jack-devel-jackaudio.org

1467500094.9124_0.ltw:2,a <CACbaDy47skAnMbvSZ3w1q0zDKYhDSERSOkG5-7g9b1pA8XSDhg at mail dot gmail dot com>
________________________________________________________________________________

