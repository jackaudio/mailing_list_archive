Date:        Tue, 24 Jan 2017 22:12:07 +0100
From:        Adrian Knoth  <[hidden] at drcomp dot erfurt dot thur dot de>
To:          micu <[hidden] at gmx dot de>
Cc:          [hidden] at lists dot jackaudio dot org
In-Reply-To: micu [Jack-Devel] jack-headers merge ( the future of JACK(2)) (1484500905.13491_0.ltw:2,a)
Follow-Up:   John Emmas Re: [Jack-Devel] jack-headers merge ( the future of JACK(2)) (1485332662.24654_0.ltw:2,a)
Follow-Up:   Ralf Mattes Re: [Jack-Devel] jack-headers merge ( the future of JACK(2)) (1485337899.30207_0.ltw:2,a)

Subject:     Re: [Jack-Devel] jack-headers merge ( the future of JACK(2))

On Sun, Jan 15, 2017 at 06:21:25PM +0100, micu wrote:

+sletz for comments, if any

> I'd like to offer my precious time for giving a jack-headers merge another 
> shot (I know Paul asked for some help on that already in 2012...).
> 
> As a first step I'd suggest moving the current JACK2 headers
> to its own branch in
> 
>     <https://github.com/jackaudio/headers>
> 
> and start using the headers repository in JACK2, as well.
> 
> But before I start digging into the work,
> I'd like to ask whether you'd be actually interested in that?
> (Or in other words: whether someone is there to review and merge the PR ;)

I promise to merge your PR, assuming folks are comfortable with the
changes.

I vaguely recall that single-repo was easier for sletz to compile on
OSX and Windows.

So instead of using git submodules for JACK2, how about we bring the
headers repo in sync and then simply copy the files over to JACK2?

I know it's not super elegant, but it avoids breaking sletz's existing
workflow.

> Paul mentioned some people having criticism about the JACK2 design, but I 
> wasn't able to find any information about the specific points of criticism.
> Could you maybe provide me with some resources about that (links to blogs, 
> mailing list posts)?

Again vague and fading recollection from 2012 when we were more active:
the OOP approach with a deep inheritance hierarchy was considered
off-putting - for feature work, you had to have a mental map of the
entire code base and then change multiple locations.

Since I never did much besides drivers, I cannot provide first-hand
experience, and it may also depend a lot on your personal preference.

If you're comfortable with complex C++ code, you might enjoy it.


Happy hacking!

-- 
mail: [hidden]  	http://adi.thur.de	PGP/GPG: key via keyserver

1485292341.5426_0.ltw:2,a <20170124211207.GC22406 at ltw dot loris dot tv>
________________________________________________________________________________

