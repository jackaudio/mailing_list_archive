Date:        Wed, 13 Sep 2017 01:18:57 +0200
From:        David Kastrup  <[hidden] at gnu dot org>
To:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Takashi Sakamoto Re: [Jack-Devel] -d firewire -X alsaraw fails? (1505255976.9849_0.ltw:2,)

Subject:     Re: [Jack-Devel] -d firewire -X alsaraw fails?

Takashi Sakamoto <[hidden]> writes:

> On Sep 13 2017 06:16, David Kastrup wrote:
>> jackd -d firewire -X alsaraw -r 96000 -p 512
>
> You cannot use ALSA and FFADO at the same time because these two
> functionalities are under a race condition against the same audio and
> music unit on IEEE 1394 bus.

Except that

jackd -X alsarawmidi -d firewire -r 96000 -p 512

actually works fine.  So the question has rather become one about the
lousy documentation and abysmal command line processing.

jackdmp 1.9.11
Copyright 2001-2005 Paul Davis and others.
Copyright 2004-2014 Grame.
jackdmp comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it
under certain conditions; see the file COPYING for details
no message buffer overruns
no message buffer overruns
no message buffer overruns
JACK server starting in realtime mode with priority 10
self-connect-mode is "Don't restrict self connect requests"
1505252013732508:  (ffado.cpp)[  92] ffado_streaming_init: libffado 2.3.0- built Aug 12 2016 08:47:17
01776466537: Warning (dice_eap.cpp)[ 115] init: no EAP mixer (device does not support EAP)
01776466618:  (dice_avdevice.cpp)[ 713] showDevice:  DICE Parameter Space info:
01776466636:  (dice_avdevice.cpp)[ 714] showDevice:   Global  : offset=0x0028 size=0360
01776466651:  (dice_avdevice.cpp)[ 715] showDevice:   TX      : offset=0x0190 size=0568
01776466658:  (dice_avdevice.cpp)[ 716] showDevice:                 nb=   2 size=0280
01776466674:  (dice_avdevice.cpp)[ 717] showDevice:   RX      : offset=0x03C8 size=1128
01776466682:  (dice_avdevice.cpp)[ 718] showDevice:                 nb=   1 size=0280
01776466698:  (dice_avdevice.cpp)[ 719] showDevice:   UNUSED1 : offset=0x0000 size=0000
01776466705:  (dice_avdevice.cpp)[ 720] showDevice:   UNUSED2 : offset=0x0000 size=0000
01776466729:  (dice_avdevice.cpp)[ 722] showDevice:  Global param space:
01776472994:  (dice_avdevice.cpp)[ 725] showDevice:   Owner            : 0x00000000FFFF0000
01776480108:  (dice_avdevice.cpp)[ 728] showDevice:   Notification     : 0x00000020
01776490994:  (dice_avdevice.cpp)[ 731] showDevice:   Nick name        : iO 14
01776495787:  (dice_avdevice.cpp)[ 735] showDevice:   Clock Select     : 0x04 0x0C
01776501759:  (dice_avdevice.cpp)[ 739] showDevice:   Enable           : false
01776508191:  (dice_avdevice.cpp)[ 743] showDevice:   Clock Status     : locked 0x04
01776513782:  (dice_avdevice.cpp)[ 746] showDevice:   Extended Status  : 0x00000000
01776520056:  (dice_avdevice.cpp)[ 749] showDevice:   Samplerate       : 0x00017700 (96000)
01776527964:  (dice_avdevice.cpp)[ 752] showDevice:   Version          : 0x01000400
01776533018:  (dice_avdevice.cpp)[ 761] showDevice:   Version          : 0x01000400 (1.0.4.0)
01776537688:  (dice_avdevice.cpp)[ 764] showDevice:   Clock caps       : 0x1121007E
01776545740:  (dice_avdevice.cpp)[ 767] showDevice:   Clock sources    :
01776545758:  (dice_avdevice.cpp)[ 773] showDevice:     SPDIF
01776545775:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545788:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545804:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545818:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545835:  (dice_avdevice.cpp)[ 773] showDevice:     ADAT
01776545846:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545862:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545873:  (dice_avdevice.cpp)[ 773] showDevice:     Firewire
01776545890:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545902:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545919:  (dice_avdevice.cpp)[ 773] showDevice:     unused
01776545931:  (dice_avdevice.cpp)[ 773] showDevice:     INTERNAL
01776545951:  (dice_avdevice.cpp)[ 776] showDevice:  TX param space:
01776545962:  (dice_avdevice.cpp)[ 777] showDevice:   Nb of xmit        : 2
01776545979:  (dice_avdevice.cpp)[ 779] showDevice:   Transmitter 0:
01776551992:  (dice_avdevice.cpp)[ 782] showDevice:    ISO channel       :  -1
01776558043:  (dice_avdevice.cpp)[ 784] showDevice:    ISO speed         :   2
01776565089:  (dice_avdevice.cpp)[ 787] showDevice:    Nb audio channels :   6
01776572020:  (dice_avdevice.cpp)[ 789] showDevice:    Nb midi channels  :   1
01776576621:  (dice_avdevice.cpp)[ 792] showDevice:    AC3 caps          : 0x00000000
01776582405:  (dice_avdevice.cpp)[ 794] showDevice:    AC3 enable        : 0x00000000
01776588678:  (dice_avdevice.cpp)[ 797] showDevice:    Channel names     :
01776588734:  (dice_avdevice.cpp)[ 802] showDevice:      Line 1
01776588786:  (dice_avdevice.cpp)[ 802] showDevice:      Line 2
01776588831:  (dice_avdevice.cpp)[ 802] showDevice:      Line 3
01776588858:  (dice_avdevice.cpp)[ 802] showDevice:      Line 4
01776588895:  (dice_avdevice.cpp)[ 802] showDevice:      SPDIF L
01776588920:  (dice_avdevice.cpp)[ 802] showDevice:      SPDIF R
01776588961:  (dice_avdevice.cpp)[ 779] showDevice:   Transmitter 1:
01776593870:  (dice_avdevice.cpp)[ 782] showDevice:    ISO channel       :  -1
01776599757:  (dice_avdevice.cpp)[ 784] showDevice:    ISO speed         :   2
01776606677:  (dice_avdevice.cpp)[ 787] showDevice:    Nb audio channels :   4
01776612717:  (dice_avdevice.cpp)[ 789] showDevice:    Nb midi channels  :   0
01776618175:  (dice_avdevice.cpp)[ 792] showDevice:    AC3 caps          : 0x00000000
01776625110:  (dice_avdevice.cpp)[ 794] showDevice:    AC3 enable        : 0x00000000
01776631896:  (dice_avdevice.cpp)[ 797] showDevice:    Channel names     :
01776631935:  (dice_avdevice.cpp)[ 802] showDevice:      ADAT1
01776631960:  (dice_avdevice.cpp)[ 802] showDevice:      ADAT2
01776631986:  (dice_avdevice.cpp)[ 802] showDevice:      ADAT3
01776632034:  (dice_avdevice.cpp)[ 802] showDevice:      ADAT4
01776632065:  (dice_avdevice.cpp)[ 806] showDevice:  RX param space:
01776632086:  (dice_avdevice.cpp)[ 807] showDevice:   Nb of recv        : 1
01776632112:  (dice_avdevice.cpp)[ 809] showDevice:   Receiver 0:
01776636559:  (dice_avdevice.cpp)[ 812] showDevice:    ISO channel       :   2
01776642463:  (dice_avdevice.cpp)[ 814] showDevice:    Sequence start    :   0
01776648459:  (dice_avdevice.cpp)[ 817] showDevice:    Nb audio channels :   8
01776654540:  (dice_avdevice.cpp)[ 819] showDevice:    Nb midi channels  :   1
01776661579:  (dice_avdevice.cpp)[ 822] showDevice:    AC3 caps          : 0x00000000
01776667266:  (dice_avdevice.cpp)[ 824] showDevice:    AC3 enable        : 0x00000000
01776675329:  (dice_avdevice.cpp)[ 827] showDevice:    Channel names     :
01776675347:  (dice_avdevice.cpp)[ 832] showDevice:      Bus1 L
01776675359:  (dice_avdevice.cpp)[ 832] showDevice:      Bus1 R
01776675374:  (dice_avdevice.cpp)[ 832] showDevice:      Bus2 L
01776675384:  (dice_avdevice.cpp)[ 832] showDevice:      Bus2 R
01776675401:  (dice_avdevice.cpp)[ 832] showDevice:      Bus3 L
01776675411:  (dice_avdevice.cpp)[ 832] showDevice:      Bus3 R
01776675429:  (dice_avdevice.cpp)[ 832] showDevice:      Bus4 L
01776675443:  (dice_avdevice.cpp)[ 832] showDevice:      Bus4 R
01776709234:  (dice_avdevice.cpp)[ 323] setSamplingFrequency: Setting sample rate: 96000
JackALSARawMidiDriver::Attach - input port registered (name='system:midi_capture_1', alias='system:2-1 UM-4 1 in').
JackALSARawMidiDriver::Attach - input port registered (name='system:midi_capture_2', alias='system:2-1 UM-4 2 in').
JackALSARawMidiDriver::Attach - input port registered (name='system:midi_capture_3', alias='system:2-1 UM-4 3 in').
JackALSARawMidiDriver::Attach - input port registered (name='system:midi_capture_4', alias='system:2-1 UM-4 4 in').
JackALSARawMidiDriver::Attach - output port registered (name='system:midi_playback_1', alias='system:2-1 UM-4 1 out').
JackALSARawMidiDriver::Attach - output port registered (name='system:midi_playback_2', alias='system:2-1 UM-4 2 out').
JackALSARawMidiDriver::Attach - output port registered (name='system:midi_playback_3', alias='system:2-1 UM-4 3 out').
JackALSARawMidiDriver::Attach - output port registered (name='system:midi_playback_4', alias='system:2-1 UM-4 4 out').
JackALSARawMidiDriver::Start - Starting 'alsarawmidi' driver.
JackALSARawMidiDriver::Start - starting ALSA thread ...
JackALSARawMidiDriver::Start - started ALSA thread.

I can then use

jack_connect "firewire_pcm:0005950400400fc2_midi 0_in" system:midi_playback_1

-- 
David Kastrup

1505258356.11992_0.ltw:2, <874ls7ijz2.fsf at fencepost dot gnu dot org>
________________________________________________________________________________

