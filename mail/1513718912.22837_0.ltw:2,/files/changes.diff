diff --git a/common/JackAudioDriver.cpp b/common/JackAudioDriver.cpp
index e699bef5..ac686e3a 100644
--- a/common/JackAudioDriver.cpp
+++ b/common/JackAudioDriver.cpp
@@ -371,7 +371,7 @@ jack_default_audio_sample_t* JackAudioDriver::GetOutputBuffer(int port_index)
 
 jack_default_audio_sample_t* JackAudioDriver::GetMonitorBuffer(int port_index)
 {
-    return fPlaybackPortList[port_index]
+    return fMonitorPortList[port_index]
         ? (jack_default_audio_sample_t*)fGraphManager->GetBuffer(fMonitorPortList[port_index], fEngineControl->fBufferSize)
         : NULL;
 }
diff --git a/common/JackClient.cpp b/common/JackClient.cpp
index bcb06ead..d1ef7d65 100644
--- a/common/JackClient.cpp
+++ b/common/JackClient.cpp
@@ -723,7 +723,7 @@ int JackClient::PortConnect(const char* src, const char* dst)
         return -1; 
     }
     if (strlen(dst) >= REAL_JACK_PORT_NAME_SIZE) {
-        jack_error("\"%s\" is too long to be used as a JACK port name.\n", src);
+        jack_error("\"%s\" is too long to be used as a JACK port name.\n", dst);
         return -1; 
     }
     int result = -1;
@@ -739,7 +739,7 @@ int JackClient::PortDisconnect(const char* src, const char* dst)
         return -1; 
     }
     if (strlen(dst) >= REAL_JACK_PORT_NAME_SIZE) {
-        jack_error("\"%s\" is too long to be used as a JACK port name.\n", src);
+        jack_error("\"%s\" is too long to be used as a JACK port name.\n", dst);
         return -1; 
     }
     int result = -1;
