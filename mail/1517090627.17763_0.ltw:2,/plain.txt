Date:        Sat, 27 Jan 2018 23:03:12 +0100
From:        Filipe Coelho  <[hidden] at gmail dot com>
To:          [hidden] at lists dot jackaudio dot org
In-Reply-To: Fons Adriaensen Re: [Jack-Devel] Usage feasibility Q (1517085750.13044_0.ltw:2,)

Subject:     Re: [Jack-Devel] Usage feasibility Q

On 27.01.2018 21:41, Fons Adriaensen wrote:
> On Sat, Jan 27, 2018 at 07:42:17PM +0100, Filipe Coelho wrote:
>> On 27.01.2018 16:53, Chris Caudle wrote:
>>>> 3. JACK "mixer" -> JACK DSP plugin -> JACK out (hw:0,0)
>>> Rather than a plugin, you will likely find it easier to develop a stand
>>> along jack application.  The jack design is not really made for having
>>> plugins in the server.
>> The JACK internal clients API disagrees with you ;)
>> Internal clients are faster to run, since they dont require context
>> switches between different processes.
>> They're harder to control externally though.
> That's a bit too simple. They will save a context switch only
> if the previous or next client is internal as well.
>
> And anyway, context switches are quite fast. I routinely run
> systems with something between 15 and 20 Jack clients, the
> overhead is absolutely insignificant.

Are those systems the regular 32 or 64bit intel systems?
While the hit might be no so significant there (for < 20 clients), the 
same is not true for ARM-based CPUs in my experience.

When doing developing for MOD, internal vs external clients made a real 
difference.
We were able to push around 30 clients (internal) instead of just 15 or 
less (external).
The difference was clearly visible on the DSP load.

FYI, everything on the MOD platform runs as internal client, except for 
jack capture.

1517090627.17763_0.ltw:2, <a23f30d1-c7c1-a515-e667-b1b70cac40ab at falktx dot com>
________________________________________________________________________________

